position:-
The position CSS property sets how an element is positioned in a document. 
The top, right, bottom, and left properties determine the final location of 
positioned elements.

-----------------------------------------------------------------------------------------------------


static: The element is positioned according to the Normal Flow of the document. 
The top, right, bottom, left, and z-index properties have no effect. This is the 
default value.

-----------------------------------------------------------------------------------------------------

relative: 
- The element is positioned according to the normal flow of the document, 
and then offset relative to original position based on the values of top, right, 
bottom, and left. For example, setting top: 10px; will move the element 10 pixels 
down from where it would normally be rendered.
- The space the element originally occupied in the document flow is preserved. 
- The offset does not affect the position of any other elements.
- Elements with relative positioning can be layered on top of or below other 
elements using the z-index property. This property specifies the stacking order 
of elements. Elements with higher z-index values are stacked above elements with 
lower z-index values.

-----------------------------------------------------------------------------------------------------

absolute: 
- The element is removed from the normal document flow, and no space is created 
for the element in the page layout. This means they do not affect the positioning 
of other elements, and other elements are positioned as if the absolutely positioned 
element were not there.
- When we apply absolute positioning to an element, it is positioned relative to its 
nearest positioned ancestor. Ancestor elements are considered positioned if they have 
a position property value other than static(i.e., relative, absolute, or fixed). If no 
positioned ancestor is found, the absolutely positioned element is placed relative to 
the initial containing block, which is usually the viewport.
- Once an absolutely positioned element is positioned relative to its containing block, 
we can use the top, right, bottom, and left properties to specify its exact position. 
These properties define the offset of the element from the top, right, bottom, or left 
edges of its containing block, respectively.
- Since absolutely positioned elements are taken out of the normal document flow, they 
can overlap other elements on the page. We can control the stacking order of absolutely 
positioned elements using the z-index property.
- The element is removed from the normal document flow, and no space is created for the 
element in the page layout. The element is positioned relative to its initial containing 
block, which is the viewport in the case of visual media. Its final position is determined 
by the values of top, right, bottom, and left.

-----------------------------------------------------------------------------------------------------

fixed
- The element is removed from the normal document flow, and no space is created for 
the element in the page layout. This means they do not affect the layout or positioning 
of other elements, and other elements are positioned as if the fixed-positioned element 
were not there.
- Elements with fixed positioning are positioned relative to the viewport, which is 
the browser window or the area of the web page visible to the user. This means that 
their position remains constant regardless of scrolling.
- Its final position is determined by the values of top, right, bottom, and left. 
These properties define the offset of the element from the top, right, bottom, or 
left edges of the viewport, respectively.
- Since fixed positioned elements are taken out of the normal document flow, they 
can overlap other elements on the page. We can control the stacking order of fixed 
positioned elements using the z-index property.

-----------------------------------------------------------------------------------------------------

sticky
-  Initially, a sticky-positioned element behaves like a relatively positioned element. 
It is positioned according to the normal flow of the document and will move along with 
the rest of the content as the user scrolls.
-  As the user scrolls, the sticky-positioned element remains in its normal flow position 
until it reaches a specified threshold, usually defined by the top, right, bottom, or left
properties. Once the element reaches this threshold, it becomes fixed in its position.
- When the sticky-positioned element becomes fixed, its positioning behavior changes. 
If a containing block is specified, the element will be fixed relative to that block. 
If no containing block is specified, the element will be fixed relative to the viewport, 
similar to fixed positioning. It remains fixed in its position until the end of the 
containing block or until the user scrolls back up to the threshold point.
- Like other positioned elements, sticky-positioned elements can overlap other elements 
on the page. We can control the stacking order of sticky-positioned elements using the 
z-index property.


top, bottom --> <length> values(-ve, null, +ve), <percentage> values(percentage
of the containing block's height), auto(default)
left, right --> <length> values(-ve, null, +ve), <percentage> values(percentage
of the containing block's width), auto(default)

-----------------------------------------------------------------------------------------------------

top:
The top property affects the vertical position of a positioned element. This property has no effect 
on non-positioned elements.

- When position is set to absolute or fixed, the top property specifies the distance 
between the element's outer margin of top edge and the inner border of the top edge 
of its containing block.
- When position is set to relative, the top property specifies the distance the element's 
top edge is moved below its normal position.
- When position is set to sticky, the top property is used to compute the 
sticky-constraint rectangle.
- When position is set to static, the top property has no effect.

When both top and bottom values are specified, there are three different cases:

- If position is set to absolute or fixed and height is unspecified (either auto or 100%), 
both the top and bottom values are respected.
- If position is set to relative or height is constrained, the top property takes precedence 
and the bottom property is ignored.
- If position is set to sticky, both top and bottom values are considered. This means that 
a sticky element can potentially move up and down within its containing block based on the 
values of these two properties as long as the element's position box remains contained within 
its containing block.


-----------------------------------------------------------------------------------------------------


bottom:
The bottom property affects the vertical position of a positioned element. This property has no effect 
on non-positioned elements.

- When position is set to absolute or fixed, the bottom property specifies the distance between the 
outer edge of the element's bottom margin and the outer edge of the containing block's bottom padding.
- When position is set to relative, the bottom property specifies the distance the element's bottom 
edge is moved above its normal position.
- When position is set to sticky, the bottom property is used to compute the sticky-constraint 
rectangle.
- When position is set to static, the bottom property has no effect.

When both top and bottom are specified, position is set to absolute or fixed, and height is 
unspecified (either auto or 100%) both the top and bottom distances are respected. In all other 
situations, if height is constrained in any way or position is set to relative, the top property 
takes precedence and the bottom property is ignored.


-----------------------------------------------------------------------------------------------------


left:
The left property affects the horizontal position of a positioned element. This property has no 
effect on non-positioned elements.

- When position is set to absolute or fixed, the left property specifies the distance between the 
element's outer margin of left edge and the inner border of left edge of its containing block. 
(The containing block is the ancestor to which the element is relatively positioned.)
- When position is set to relative, the left property specifies the distance the element's left 
edge is moved to the right from its normal position.
- When position is set to sticky, the left property is used to compute the sticky-constraint rectangle.
- When position is set to static, the left property has no effect.


When both left and right are defined, and width constraints don't prevent it, the element will stretch to 
satisfy both. If the element cannot stretch to satisfy both, the position of the element is overspecified. 
When this is the case, the left value has precedence when the container is left-to-right; the right value 
has precedence when the container is right-to-left.

-----------------------------------------------------------------------------------------------------


right:
The right property affects the horizontal position of a positioned element. This property has no 
effect on non-positioned elements.

- When position is set to absolute or fixed, the right property specifies the distance between the 
element's outer margin of right edge and the inner border of the right edge of its containing block.
- When position is set to relative, the right property specifies the distance the element's right edge 
is moved to the left from its normal position.
- When position is set to sticky, the right property is used to compute the sticky-constraint rectangle.
- When position is set to static, the right property has no effect.

When both left and right are defined, if not prevented from doing so by other properties, the element 
will stretch to satisfy both. If the element cannot stretch to satisfy both — for example, if a width 
is declared — the position of the element is over-constrained. When this is the case, the left value has 
precedence when the container is left-to-right; the right value has precedence when the container is 
right-to-left.


-----------------------------------------------------------------------------------------------------


